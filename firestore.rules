/**
 * @fileoverview Firestore Security Rules for Ye-Games application.
 *
 * Core Philosophy:
 * This ruleset provides completely public read access to both `games` and `tags` collections. Write access is completely disabled, effectively making these collections read-only. This allows the application to display game and tag data to all users without authentication.
 *
 * Data Structure:
 * The database consists of two top-level collections: `/games/{gameId}` and `/tags/{tagId}`.  There are no subcollections.
 *
 * Key Security Decisions:
 * - User listing is disallowed.
 * - Games and Tags are publicly readable.
 * - Writes are disabled, to ensure no accidental writes can occur in the Prototyping stage.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to games, but restricts all write access.
     * @path /games/{gameId}
     * @allow (get, list) Any user can read game data.
     * @deny (create, update, delete) No user can create, update, or delete games.
     * @principle Allows public read access while preventing unauthorized writes.
     */
    match /games/{gameId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants public read access to tags, but restricts all write access.
     * @path /tags/{tagId}
     * @allow (get, list) Any user can read tag data.
     * @deny (create, update, delete) No user can create, update, or delete tags.
     * @principle Allows public read access while preventing unauthorized writes.
     */
    match /tags/{tagId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}