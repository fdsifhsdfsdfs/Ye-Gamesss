/**
 * @file Firestore Security Rules
 * @description This ruleset defines access control for the Ye-Games application.
 *
 * Core Philosophy:
 *   This ruleset prioritizes security by explicitly defining access permissions for each collection and document.
 *   It focuses on preventing unauthorized data access and modification.
 *   The rules are designed to be strict by default, with exceptions explicitly granted.
 *
 * Data Structure:
 *   The Firestore database consists of three top-level collections: `/games/{gameId}`, `/tags/{tagId}`, and `/analytics/live-stats`.
 *   - `/games/{gameId}`: Stores game data.
 *   - `/tags/{tagId}`: Stores tag data.
 *   - `/analytics/live-stats`: Stores live analytics data in a single document.
 *
 * Key Security Decisions:
 *   - Public read access is enabled for `/games` and `/tags` to allow listing and viewing game and tag information.
 *   - Writes to `/games` and `/tags` are disallowed to prevent unauthorized modifications.
 *   - Access to the `/analytics/live-stats` document is denied to all users, requiring backend-only access.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to the /games collection.
     * @path /databases/{database}/documents/games/{gameId}
     * @allow (get, list): Any user can read game data.
     * @deny (create, update, delete): No user can create, update, or delete game data directly.
     * @principle Allows public read access to game data but restricts write access.
     */
    match /games/{gameId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to the /tags collection.
     * @path /databases/{database}/documents/tags/{tagId}
     * @allow (get, list): Any user can read tag data.
     * @deny (create, update, delete): No user can create, update, or delete tag data directly.
     * @principle Allows public read access to tag data but restricts write access.
     */
    match /tags/{tagId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to the /analytics/live-stats document.
     * @path /databases/{database}/documents/analytics/live-stats
     * @deny (get, list, create, update, delete): No user can read or write analytics data.
     * @principle Restricts access to analytics data, requiring backend-only access.
     */
    match /analytics/live-stats {
      allow get, list, create, update, delete: if false;
    }
  }
}